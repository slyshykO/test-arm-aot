<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
    <DisableUnsupportedError>true</DisableUnsupportedError>
  </PropertyGroup>

  <UsingTask TaskName="PrependPath"
             TaskFactory="RoslynCodeTaskFactory"
             AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">

    <ParameterGroup>
      <Value ParameterType="System.String" Required="true" />
    </ParameterGroup>

    <Task>
      <Using Namespace="System" />
      <Using Namespace="System.IO" />
      <Code Type="Fragment" Language="cs">
        <![CDATA[
          Environment.SetEnvironmentVariable("PATH", Value + Path.PathSeparator + Environment.GetEnvironmentVariable("PATH"));
        ]]>
      </Code>
    </Task>

  </UsingTask>

  <Target Name="SetPathToClang"
          BeforeTargets="SetupOSSpecificProps">

    <PrependPath Value="$(MSBuildThisFileDirectory)" />

  </Target>

  <!-- BEGIN: Works around ILCompiler targets not detecting this as a cross compilation -->
  <Target Name="OverwriteTargetTriple"
          AfterTargets="SetupOSSpecificProps"
          BeforeTargets="LinkNative">

    <PropertyGroup>
      <CrossCompileRid />
      <CrossCompileRid>$(RuntimeIdentifier)</CrossCompileRid>

      <CrossCompileArch />
      <CrossCompileArch Condition="$(CrossCompileRid.EndsWith('-x64'))">x86_64</CrossCompileArch>
      <CrossCompileArch Condition="$(CrossCompileRid.EndsWith('-arm64'))">aarch64</CrossCompileArch>
      <CrossCompileArch Condition="$(CrossCompileRid.EndsWith('-arm'))">arm</CrossCompileArch>

      <TargetTriple />
      <TargetTriple Condition="'$(CrossCompileArch)' != ''">$(CrossCompileArch)-linux-gnu</TargetTriple>
      <TargetTriple Condition="'$(CrossCompileArch)' == 'arm' and !$(CrossCompileRid.StartsWith('linux-musl'))">thumb-linux-gnueabihf</TargetTriple>
      <TargetTriple Condition="'$(CrossCompileArch)' == 'arm' and  $(CrossCompileRid.StartsWith('linux-musl'))">thumb-linux-musleabihf</TargetTriple>
      <TargetTriple Condition="'$(CrossCompileArch)' != '' and '$(CrossCompileArch)' != 'arm' and ($(CrossCompileRid.StartsWith('linux-musl')) or $(CrossCompileRid.StartsWith('alpine')))">$(CrossCompileArch)-linux-musl</TargetTriple>
    </PropertyGroup>

    <ItemGroup>
      <LinkerArg Include="--target=$(TargetTriple)" />
    </ItemGroup>

  </Target>
  <!-- END: Works around ILCompiler targets not detecting this as a cross compilation -->

</Project>
